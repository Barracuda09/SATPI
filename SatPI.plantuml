@startuml

hide footbox

title SatPI

SatPI *-- DvbapiClient
SatPI *-- Streams
SatPI *-- RtspServer
SatPI *-- HttpServer
SatPI *-- SsdpServer
SatPI *-- Properties
SatPI *-- InterfaceAttr


class SatPI {
  Properties
  InterfaceAttr
}

class InterfaceAttr {
  Eth0 etc.
}

class HttpcSocket {
  recvHttpcMessage(..)
  recvfromHttpcMessage(..)
}

SocketClient --|> SocketAttr
class SocketClient {
  std::string _msg
  std::string _protocolString
  std::string _sessionID
}

class SocketAttr {
  _fd
  std::string _ip_addr
}

TcpSocket --|> HttpcSocket
TcpSocket *-- SocketAttr : "_server"
TcpSocket *-- SocketClient : "_client[..]"
class TcpSocket {
  poll(..)
  process(..)
  closeConnection(..)
  std::string _protocolString
}

UdpSocket --|> HttpcSocket
class UdpSocket {
  init_udp_socket(..)
  init_mutlicast_udp_socket(..)
}

SsdpServer --|> UdpSocket

RtspServer --|> HttpcServer

HttpServer --|> HttpcServer
HttpServer *.. Properties
HttpServer *.. DvbapiClient

HttpcServer --|> TcpSocket
HttpcServer *.. Streams : "_streams"
HttpcServer *.. InterfaceAttr

StreamInterface --|> Stream

Stream *-- StreamClient : " _client[..] "
Stream *-- StreamProperties
Stream *-- Frontend
Stream *-- StreamThreadBase
class Stream {
  Mutex
  streamInUse
  enabled
  StreamingType
}

Streams *-- Stream : " _stream[..] "
class Streams {
  Mutex
}

StreamClient *-- SocketAttr : " _rtp "
StreamClient *-- SocketAttr : " _rtcp "
StreamClient *.. SocketAttr : " httpcFD "
class StreamClient {
  Mutex
  const int *httpcFD
  watchdog
  canClose
  cseq
}

StreamThreadBase *.. DvbapiClient
StreamThreadBase *-- TSPacketBuffer : " _tsBuffer[..] "
StreamThreadBase *.. StreamInterface
class StreamThreadBase {
}


RtpStreamThread --|> StreamThreadBase
RtpStreamThread *-- RtcpThread
class RtpStreamThread {
  socket_fd_rtp
  cseq
}

RtcpThread *.. StreamInterface
class RtcpThread {
  socket_fd
  fd_fe
}

HttpStreamThread --|> StreamThreadBase

DvbapiClientProperties *-- dvbcsa_key_s
DvbapiClientProperties *-- TSTableData : " _pat "
DvbapiClientProperties *-- TSTableData : " _pmt "

StreamProperties *-- ChannelData
StreamProperties --|> DvbapiClientProperties
class StreamProperties {
  Mutex
}

DvbapiClient  .  Streams
class DvbapiClient {
  Mutex
  _getStreamProperties(..)
  _updateFrontend(..)
}

Frontend *-- Lnb_t
Frontend *-- DiSEqc_t

ChannelData *-- PidTable

@enduml

