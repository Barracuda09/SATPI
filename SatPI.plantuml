@startuml

hide footbox

title SatPI

SatPI *-- decrypt::dvbapi::Client
SatPI *-- Streams
SatPI *-- RtspServer
SatPI *-- HttpServer
SatPI *-- SsdpServer
SatPI *-- Properties
SatPI *-- InterfaceAttr


class SatPI {
  Properties
  InterfaceAttr
}

class InterfaceAttr {
  Eth0 etc.
}

class HttpcSocket {
  recvHttpcMessage(..)
  recvfromHttpcMessage(..)
}

SocketClient --|> SocketAttr
class SocketClient {
  std::string _msg
  std::string _protocolString
  std::string _sessionID
}

class SocketAttr {
  _fd
  std::string _ip_addr
}

TcpSocket --|> HttpcSocket
TcpSocket *-- SocketAttr : "_server"
TcpSocket *-- SocketClient : "_client[..]"
class TcpSocket {
  poll(..)
  process(..)
  closeConnection(..)
  std::string _protocolString
}

UdpSocket --|> HttpcSocket
class UdpSocket {
  init_udp_socket(..)
  init_mutlicast_udp_socket(..)
}

SsdpServer --|> UdpSocket

RtspServer --|> HttpcServer

HttpServer --|> HttpcServer
HttpServer *.. Properties
HttpServer *.. decrypt::dvbapi::Client

HttpcServer --|> TcpSocket
HttpcServer *.. Streams : "_streams"
HttpcServer *.. InterfaceAttr

StreamInterface        <|-- Stream
StreamInterfaceDecrypt <|-- Stream

Stream *-- StreamClient : " _client[..] "
Stream *-- input::Device
Stream *-- StreamThreadBase
class Stream {
  Mutex
  streamInUse
  enabled
  StreamingType
  StreamProperties
  decrypt::dvbapi::ClientProperties
  ChannelData
}

Streams *-- Stream : " _stream[..] "
class Streams {
  Mutex
}

StreamClient *-- SocketAttr : " _rtp "
StreamClient *-- SocketAttr : " _rtcp "
StreamClient *.. SocketAttr : " httpcFD "
class StreamClient {
  Mutex
  const int *httpcFD
  watchdog
  canClose
  cseq
}

StreamThreadBase *.. decrypt::dvbapi::Client
StreamThreadBase *-- TSPacketBuffer : " _tsBuffer[..] "
StreamThreadBase *.. StreamInterface
class StreamThreadBase {
}


RtpStreamThread --|> StreamThreadBase
RtpStreamThread *-- RtcpThread
class RtpStreamThread {
  socket_fd
  cseq
}

RtcpThread *.. StreamInterface
class RtcpThread {
  socket_fd
}

HttpStreamThread --|> StreamThreadBase

decrypt::dvbapi::ClientProperties *-- dvbcsa_key_s
decrypt::dvbapi::ClientProperties *-- TSTableData : " _pat "
decrypt::dvbapi::ClientProperties *-- TSTableData : " _pmt "


decrypt::dvbapi::Client  .  Streams
class decrypt::dvbapi::Client {
  Mutex
  _getStreamInterfaceDecrypt(..)
}

input::Device <|-- input::dvb::Frontend
input::Device <|-- input::file::TSReader

input::dvb::Frontend <|-- DVB_S
input::dvb::Frontend <|-- DVB_C_T
input::dvb::Frontend <|-- ATSC

DVB_S *-- Lnb_t
DVB_S *-- DiSEqc_t

ChannelData *-- PidTable

@enduml

