@startuml

hide footbox

title SatPI

SatPI *-- StreamManager
SatPI *-- RtspServer
SatPI *-- HttpServer
SatPI *-- SsdpServer
SatPI *-- Properties
SatPI *-- InterfaceAttr


class SatPI #ffcccc {
  Properties
  InterfaceAttr
}

class XMLSupport #aaaaff {
  Mutex _mutex
  --
}

class InterfaceAttr {
  Eth0 etc.
}

class socket::HttpcSocket {
  recvHttpcMessage(..)
  recvfromHttpcMessage(..)
}

socket::SocketClient --|> socket::SocketAttr
class socket::SocketClient {
  std::string _msg
  std::string _protocolString
  std::string _sessionID
  std::string _userAgent
  int _cseq
}

class socket::SocketAttr {
  _fd
  std::string _ipAddr
}

socket::TcpSocket --|> socket::HttpcSocket
socket::TcpSocket *-- socket::SocketAttr : "_server"
socket::TcpSocket *-- socket::SocketClient : "_client[..]"
class socket::TcpSocket {
  poll(..) -> calls recvHttpcMessage(..)
           -> calls process(..)
           -> calls closeConnection(..)
  std::string _protocolString
}

socket::UdpSocket --|> socket::HttpcSocket
class socket::UdpSocket {
  init_udp_socket(..)
  init_mutlicast_udp_socket(..)
}

SsdpServer --|> socket::UdpSocket
class SsdpServer {
  ** Thread **
  --
  --
  threadEntry()
}


RtspServer --|> HttpcServer
class RtspServer {
  ** Thread **
  --
  --
  threadEntry() -> calls poll(..)
  methodSetup(..)
  methodPlay(..)
  methodOptions(..)
  methodDescribe(..)
  methodTeardown(..)
}

HttpServer --|> HttpcServer
HttpServer *.. Properties
class HttpServer {
  ** Thread **
  --
  --
  threadEntry() -> calls poll(..)
  methodPost(..)
  methodGet(..)
}

HttpcServer --|> socket::TcpSocket
HttpcServer *.. StreamManager : "_streamManager"
HttpcServer *.. InterfaceAttr
class HttpcServer {
  process(..)
  closeConnection(..)
  processStreamingRequest(..)
}

class StreamInterface #aaaaff {
  getInputDevice() = 0
  getStreamClient(..) = 0
  getDecryptDevice() = 0
}

Stream --|> StreamInterface
Stream *-- StreamClient : " _client[..] "
Stream *-- input::Device
Stream *-- output::StreamThreadBase
decrypt::dvbapi::Client ..* Stream : " _decrypt "
class Stream #aaaaff {
  XMLSupport
  --
  enabled
  StreamingType (RSTP/RTP/HTTP/..)
  streamInUse
  --
  getFrontendDecryptInterface()
}

class decrypt::dvbapi::Client           #ffbb11 {
  ** Thread **
  --
  --
}

class decrypt::dvbapi::ClientProperties #ffbb11
class dvbcsa_bs_batch_s                 #ffbb11
class Keys                              #ffbb11
class decrypt::dvbapi::Filter           #ffbb11 {
  Mutex _mutex
  --
}

decrypt::dvbapi::Client --* StreamManager  : " _decrypt "
decrypt::dvbapi::Client *.. StreamManager  : " _streamManager "

StreamManager *-- Stream : " _stream[..] "
class StreamManager #aaaaff {
  XMLSupport
  --
  --
  getFrontendDecryptInterface(..)
}

StreamClient *-- socket::SocketAttr : " _rtp "
StreamClient *-- socket::SocketAttr : " _rtcp "
StreamClient *.. socket::SocketClient : " _httpStream "
class StreamClient #aaaaff {
  Mutex _mutex
  --
  SocketClient *_httpStream
  watchdog
}

class mpegts::Filter        #11ff11 {
  Mutex _mutex
  --
}
class mpegts::PacketBuffer  #11ff11
class mpegts::TableData     #11ff11
class mpegts::PidTable      #11ff11
class mpegts::PAT           #11ff11
class mpegts::PMT           #11ff11
class mpegts::PCR           #11ff11
class mpegts::SDT           #11ff11

output::StreamThreadBase *-- mpegts::PacketBuffer : " _tsBuffer[..] "
output::StreamThreadBase *.. StreamInterface
class output::StreamThreadBase #ccffff {
  ** Thread **
  --
}

class output::StreamThreadRtcp #ccffff
class output::StreamThreadHttp #ccffff

output::StreamThreadRtcp --* output::StreamThreadRtp

output::StreamThreadRtp --|> output::StreamThreadBase
class output::StreamThreadRtp #ccffff {
  cseq
}

output::StreamThreadHttp --|> output::StreamThreadBase

class input::stream::Streamer #55ccff
input::Device <|-- input::stream::Streamer

class input::file::TSReader     #99cc11
class TSReaderData              #99cc11

input::Device <|-- input::file::TSReader
input::file::TSReader *-- TSReaderData

TSReaderData --|> input::DeviceData

input::Device <|-- input::dvb::Frontend
class input::Device      #aaccaa {
  --
  StreamID
  isDataAvailable() = 0
  readFullTSPacket(..) = 0
}
class input::Translation #aaccaa

class input::DeviceData  #aaccaa {
  XMLSupport
  --
  Mutex _mutex
  bool _changed
  --
}

input::dvb::FrontendDecryptInterface <|-- input::dvb::Frontend

class input::dvb::FrontendDecryptInterface #ffccaa
class input::dvb::Frontend                 #ffccaa
class input::dvb::FrontendData             #ffccaa {
  Tuning/Channel Data
}

input::dvb::Frontend *-- input::dvb::delivery::System : " _deliverySystem[..] "
input::dvb::Frontend *-- input::dvb::FrontendData
input::dvb::Frontend *-- input::Translation : " _translation "
decrypt::dvbapi::ClientProperties --* input::dvb::Frontend : " dvbapiData - Only with LIBDVBCSA "


class input::dvb::delivery::System #aacccc
class DVBS                         #aacccc
class DVBC                         #aacccc
class DVBT                         #aacccc
class ATSC                         #aacccc

input::dvb::delivery::System <|-- DVBS
input::dvb::delivery::System <|-- DVBC
input::dvb::delivery::System <|-- DVBT
input::dvb::delivery::System <|-- ATSC


class DiSEqcSwitch  #aacccc
class DiSEqcEN50494 #aacccc
class DiSEqcEN50607 #aacccc
class DiSEqc        #aacccc
class Lnb           #aacccc

DiSEqc <|-- DiSEqcSwitch
DiSEqc <|-- DiSEqcEN50494
DiSEqc <|-- DiSEqcEN50607

DVBS *-- DiSEqc : " _diseqc "

DiSEqc *-- Lnb : " _lnb[MAX_LNB] "

decrypt::dvbapi::ClientProperties *-- dvbcsa_bs_batch_s : " _batch "
decrypt::dvbapi::ClientProperties *-- decrypt::dvbapi::Filter
decrypt::dvbapi::ClientProperties *-- Keys

input::DeviceData <|-- input::dvb::FrontendData

mpegts::PAT --|> mpegts::TableData
mpegts::PMT --|> mpegts::TableData
mpegts::SDT --|> mpegts::TableData

mpegts::Filter *-- mpegts::PidTable
mpegts::Filter *-- mpegts::PAT
mpegts::Filter *-- mpegts::PMT
mpegts::Filter *-- mpegts::PCR
mpegts::Filter *-- mpegts::SDT
input::DeviceData *-- mpegts::Filter : " _filter "


@enduml

